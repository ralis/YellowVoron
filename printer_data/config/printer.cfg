[include shell_command.cfg]


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_410020001951303439363932-if00


[printer]
kinematics: corexy
max_velocity: 250  
max_accel: 5800			        
max_accel_to_decel: 5800
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[pause_resume]
#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 32
microsteps: 16
endstop_pin: ^PA1
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 200   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: False
run_current: 0.85 # At 1.4A, was overheating error when printer idle after homing for about 1-2 min
sense_resistor: 0.110

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 32
microsteps: 16
endstop_pin: ^PA2
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 200 
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False
run_current: 0.85
sense_resistor: 0.110

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
##  In Z- Position
# endstop_pin: ^PA0
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 16
second_homing_speed: 3
homing_retract_dist: 3
# # Klicky Probe
# # Enrique: Needed to use with Z Endstop sensor but fails with no values so guessed first to load
# # new cfg first to then home again to get exact.
# Still fails with other errors :(
# # Ref: https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/JosAr/Klicky-Probe
# variable_z_endstop_x: 0
# variable_z_endstop_y: 0

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: False
run_current: 1.2
sense_resistor: 0.110

[heater_bed]
heater_pin: PB4
sensor_pin: PB0 # Spider 2.2, had this wrong so failed to start Klipper in YVoron!
sensor_type: NTC 100K MGB18-104F39050L32
max_power: 0.6
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.01666
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
pin: PB2
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 75.0
fan_speed: 1.0

[controller_fan spider_drivers]
##	Cool off steppers since got error 2x while doing initial testing and motors were idle but on.
pin: PA13
fan_speed: 0.5
idle_timeout: 120 # 10 min to see if drivers not overheating.
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2, stepper_z3
heater:

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0
initial_GREEN: 1
initial_BLUE: 0
color_order: RGB

[respond]
default_type: echo

#####################################################################
#	LED Control
#####################################################################
[output_pin caselight ]
#  Chamber Lighting - In E1 OUT Position
pin: PC8
pwm: true
shutdown_value: 0
cycle_time: 0.01

# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.
# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: b3293f38dc4a

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.600
filament_diameter: 1.750
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
pressure_advance: 0.025            
pressure_advance_smooth_time: 0.03 
heater_pin: EBBCan: PB13
# sensor_type: EPCOS 100K B57560G104F
# From Red Voron
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3
control = pid
pid_kp = 24.056
pid_ki = 2.291
pid_kd = 63.148
min_temp: 0
max_temp: 300

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: true
run_current: 0.85 #**
sense_resistor: 0.11 #**
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4


[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1
[safe_z_home]
home_xy_position: 175,175
speed:100
z_hop:10

[probe]
# Tap
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NO instead of NC, change pin to ^!PA3
pin: EBBCan: PB5
x_offset: 0
y_offset: 0
z_offset: 0
speed: 7
lift_speed: 14
samples: 3
samples_result: median
# Increased tolerance from 0.006 to 0.008 to 0.01
sample_retract_dist: 3.0
samples_tolerance: 0.010
samples_tolerance_retries: 6
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[quad_gantry_level]
# QGL
#  Gantry Corners for 350mm Build
#  Uncomment for 350mm build
gantry_corners:
  -60,-10
  410,420
#  Probe points
points:
  50,25
  50,275
  300,275
  300,25
max_adjust: 10.0 
speed: 100
horizontal_move_z: 10
retries: 7
retry_tolerance: 0.0075


[temperature_sensor SBB2209]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 90


[exclude_object]

[gcode_macro G32]
gcode:
    SET_PIN PIN=caselight VALUE=1
    # For Tap max to get readings before a print from Kapman's suggestion
    M117 Tap Heatup...
    M140 S70     ; set bed + ext at same time to get to temps more quickly
    M109 S150
    CLEAN_NOZZLE
    G28 
    
[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include nozzle_scrub.cfg]
[include bedfans.cfg]
[include stealthburner.cfg]
[include fanmonitor.cfg]
[include macros.cfg]
[include dry_box.cfg]
# [include KAMP_Settings.cfg]
# [include adxl.cfg]
#*# [probe]
#*# z_offset = -0.300

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.056
#*# pid_ki = 2.291
#*# pid_kd = 63.148
