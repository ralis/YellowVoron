[bed_mesh]

[include KAMP_Settings.cfg]
[include shell_command.cfg]
[include orbiter_sensor.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_410020001951303439363932-if00

[mcu EBBCan]
canbus_uuid: 86bac3898f5c

[printer]
kinematics: corexy
max_velocity: 250  
max_accel: 10800			        
max_accel_to_decel: 10000
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[pause_resume]
#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 32
microsteps: 16
endstop_pin: ^PA1
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 200   
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: False
run_current: 0.85 # At 1.4A, was overheating error when printer idle after homing for about 1-2 min
sense_resistor: 0.110

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 32
microsteps: 16
endstop_pin: ^PA2
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 200 
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False
run_current: 0.85
sense_resistor: 0.110

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 310
position_min: -5
homing_speed: 16
second_homing_speed: 3
homing_retract_dist: 3


[tmc2209 stepper_z]
uart_pin: PD10
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: False
run_current: 1.2
sense_resistor: 0.110

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:20
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: False
run_current: 1.2
sense_resistor: 0.110

[heater_bed]
heater_pin: PB4
sensor_pin: PB0 # Spider 2.2, had this wrong so failed to start Klipper in YVoron!
sensor_type: NTC 100K MGB18-104F39050L32
max_power: 0.6
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.01666
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
max_error: 500
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 360
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for ext
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.
#####################################################################
#	Probe
#####################################################################
[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
pin: PB2
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 75.0
fan_speed: 0.50

[controller_fan spider_drivers]
##	Cool off steppers since got error 2x while doing initial testing and motors were idle but on.
pin: PA13
fan_speed: 0.5
idle_timeout: 120 # 10 min to see if drivers not overheating.
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2, stepper_z3
heater:

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0
initial_GREEN: 1
initial_BLUE: 0
color_order: RGB

[respond]
default_type: echo

#####################################################################
#	LED Control
#####################################################################
[output_pin caselight ]
#  Chamber Lighting - In E1 OUT Position
pin: PC8
pwm: true
shutdown_value: 0
cycle_time: 0.01


[safe_z_home]
home_xy_position: 175,325
speed:100
z_hop:10

[probe]
# Tap
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NO instead of NC, change pin to ^!PA3
pin: EBBCan: PB9
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 7
lift_speed: 14
samples: 3
samples_result: median
# Increased tolerance from 0.006 to 0.008 to 0.01
sample_retract_dist: 3.0
samples_tolerance: 0.010
samples_tolerance_retries: 6
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[quad_gantry_level]
# QGL
#  Gantry Corners for 350mm Build
#  Uncomment for 350mm build
gantry_corners:
  -60,-10
  410,420
#  Probe points
points:
  25,25
  25,340
  340,340
  340,25
max_adjust: 10.0 
speed: 100
horizontal_move_z: 10
retries: 7
retry_tolerance: 0.0075

[exclude_object]

[gcode_macro G32]
gcode:
    SET_PIN PIN=caselight VALUE=1
    # For Tap max to get readings before a print from Kapman's suggestion
    M117 Tap Heatup...
    M140 S70     ; set bed + ext at same time to get to temps more quickly
    M109 S150
    # CLEAN_NOZZLE
    G28 
#printstart
[gcode_macro PRINT_START]
gcode:
    STATUS_PRINTING
    G28
    G32
    # Cleaning nozzle in G28 above for QGL
    # M117 QGL Scrub
    M117 Plate Temp
    # Wait 2 min while for build plate to expand fully
    # G4 P120000
    M117 Quad Gantry Leveling
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE
    SMART_PARK
    G90 ; Force absolute so can move bed at start
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    M140 S{bedtemp}     ; set bed + ext at same time to get to temps more quickly
    M104 S{hotendtemp}
    M190 S{bedtemp}     ; Wait to get to temps                                                
    M109 S{hotendtemp}      
    M220 S100 ; At 300%, some filament missing at various layers.  Went down to 100%.
    # CLEAN_NOZZLE
    LINE_PURGE
    # # TEMP move up Z offset manually until can get more info on can be going on
    # SET_GCODE_OFFSET Z=2.2
    # M117 Z Offs 2.2mm

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    G1 E-10.0 F3600              ; Retract to easily change filaments, KAMP purge line helps with 1st layer
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}

    # Exhaust out all ABS/Nylon fumes
    SET_FAN_SPEED FAN=BedFans SPEED=1
    M400                           ; wait for buffer to clear
    G92 E0                         
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G91                            ; Force to Relative for moving up based on 3d printed model
    G1 Z15 F3000                    ; move nozzle up 15mm
    G90                             ; Set to Absolute since can stop printing from starting
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    M84                             ; Disable motors so can move gantry out of the way based on the print
    STATUS_READY
    M117 Ready
    

#####################################################################
# 	ebb36
#####################################################################
[extruder]
step_pin: EBBCan:PD0
dir_pin: EBBCan:PD1
enable_pin: !EBBCan:PD2
heater_pin: EBBCan: PB13
sensor_pin: EBBCan: PA3
pullup_resistor: 2200
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.600
filament_diameter: 1.750
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
max_extrude_cross_section: 5
pressure_advance: 0.025            
pressure_advance_smooth_time: 0.03 
sensor_type: ATC Semitec 104GT-2
#control = pid
#pid_kp = 32.120
#pid_ki = 2.231
#pid_kd = 115.637
min_temp: 0
max_temp: 305
min_extrude_temp: 170

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.85
interpolate: true
sense_resistor: 0.11 #**
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[heater_fan hotend_fan]
pin: EBBCan:PA0
heater_temp: 70.0

[verify_heater extruder]
max_error: 600
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.
[fan]
pin: EBBCan: PA1

[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

# [neopixel sb_leds]
# pin: EBBCan:PD3

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points: 175,175,20

[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include nozzle_scrub.cfg]
[include bedfans.cfg]
[include stealthburner.cfg]
[include fanmonitor.cfg]
[include macros.cfg]
[include dry_box.cfg]

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 35, 6
mesh_max: 250, 250
probe_count: 5, 3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -1.275
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 32.474
#*# pid_ki = 0.937
#*# pid_kd = 281.310
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.267
#*# pid_ki = 1.529
#*# pid_kd = 60.692
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.918042, -0.896167, -0.871167, -0.921167, -0.927417
#*# 	-0.955542, -0.986792, -0.968042, -0.968042, -0.955542
#*# 	-0.955542, -0.961792, -0.964917, -0.968042, -0.971167
#*# x_count = 5
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 250.0
#*# min_y = 12.5
#*# max_y = 250.0
