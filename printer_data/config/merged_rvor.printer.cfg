[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include nozzle_scrub.cfg]
[include bedfans.cfg]
[include stealthburner.cfg]
[include fanmonitor.cfg]
[include macros.cfg]
[include dry_box.cfg]
# [include KAMP_Settings.cfg]
# [include adxl.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_410020001951303439363932-if00

[printer]
kinematics: corexy
max_velocity: 250  
max_accel: 5800			        
max_accel_to_decel: 5800
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[pause_resume]
#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ^PA1
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ^PA2
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
##  In Z- Position
# endstop_pin: ^PA0
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 290
position_min: -5
homing_speed: 16
second_homing_speed: 3
homing_retract_dist: 3
# # Klicky Probe
# # Enrique: Needed to use with Z Endstop sensor but fails with no values so guessed first to load
# # new cfg first to then home again to get exact.
# Still fails with other errors :(
# # Ref: https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/JosAr/Klicky-Probe
# variable_z_endstop_x: 0
# variable_z_endstop_y: 0

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
interpolate: True
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: true
run_current: 1.2
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.65
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.01666
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[verify_heater heater_bed]
max_error: 300
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 90
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
pin: PB2
#kick_start_time: 0.5
heater: heater_bed
heater_temp: 75.0
# Eruiz 3/31/22" Increased fan speed to 1.0 (100%) to reduce layer shift during fast moves or bumps
fan_speed: 1.0

#####################################################################
#	LED Control
#####################################################################
[output_pin caselight ]
#  Chamber Lighting - In E1 OUT Position
pin: PC8
pwm: true
shutdown_value: 0
cycle_time: 0.01

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

## Enrique: Commented out since using Klicky complains with this section and [homing_override]
[safe_z_home]
home_xy_position: 150,280
speed:100
z_hop:10
   
[quad_gantry_level]
#	Use QUAD_GANTRY_LEVEL to level a gantry.
#	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
#	MAX (250, 250), (300,300), or (350,350) depending on your printer size
#	to respective belt positions
	
#	Gantry Corners for 300mm Build
gantry_corners:
	-60,-10
	360,370
#	Probe points
points:
	50,25
	50,225
	250,225
	250,25


#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

[respond]
default_type: echo

#####################################################################
#	Macros
#####################################################################


[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 35, 6
mesh_max: 250, 250
probe_count: 5, 3

[exclude_object]

[gcode_macro G32]
gcode:
    SET_PIN PIN=caselight VALUE=1
    # For Tap max to get readings before a print from Kapman's suggestion
    M117 Tap Heatup...
    M140 S70     ; set bed + ext at same time to get to temps more quickly
    M109 S150
    CLEAN_NOZZLE
    G28 

   
[gcode_macro PRINT_START]
gcode:
    SET_LED LED=sb_leds RED=1 GREEN=1 BLUE=1 WHITE=1
    G28
    G32
    # Cleaning nozzle in G28 above for QGL
    M117 QGL Scrub
    M117 Quad Gantry Leveling
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE
    SMART_PARK
    G90 ; Force absolute so can move bed at start
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    M140 S{bedtemp}     ; set bed + ext at same time to get to temps more quickly
    M104 S{hotendtemp}
    M190 S{bedtemp}     ; Wait to get to temps                                                
    M109 S{hotendtemp}      
    M220 S100 ; At 300%, some filament missing at various layers.  Went down to 100%.
    CLEAN_NOZZLE
    LINE_PURGE
    M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    G1 E-10.0 F3600              ; Retract to easily change filaments, KAMP purge line helps with 1st layer
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}

    # Exhaust out all ABS/Nylon fumes
    SET_FAN_SPEED FAN=BedFans SPEED=1
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G91                            ; Force to Relative for moving up based on 3d printed model
    G1 Z10 F3000                    ; move nozzle up 5mm
    G90                             ; Set to Absolute since can stop printing from starting
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    M84                             ; Disable motors so can move gantry out of the way based on the print
    M114 Ready

[gcode_macro MID_BED]
#   Move middle of bed
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X175 Y175 F3600             ; park nozzle at rear
    SET_PIN PIN=caselight VALUE=1

[gcode_macro SAFER_DOCK_PROBE]
#   Moves head to avoid hitting scrubber which will have probe still attached but off center 
# which causes a crash!!!! SO first  moving to 0,150 first, then dock 
gcode:
    G32                   ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X0 Y150 F3600             ; park nozzle at rear
    DOCK_PROBE 

[gcode_macro STBURNER_FIXES]
gcode:
    _CG28 ; home all axes
    G90
    G0 X150 Y0 Z150 F3600


#############################################################
# Filament Sensor - Change filament
#############################################################
# Filament change
[gcode_macro M600]
gcode:
    PAUSE_MACRO
    UNLOAD

[gcode_macro PAUSE_MACRO]
gcode:
    ; SAVE_GCODE_STATE NAME=PAUSE_state
    PAUSE
    RESPOND TYPE=command MSG=action:paused
    PARK_MACRO
    SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro RESUME_MACRO]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600
    ; RESTORE_GCODE_STATE NAME=PAUSE_state
    RESUME
    RESPOND TYPE=command MSG=action:resumed

[gcode_macro PARK_MACRO]
gcode:
    {% set X = params.X|default(20) %}
    {% set Y = params.X|default(280) %}
    {% set Z = params.X|default(100) %}
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91                     ; relative positioning
    G1 E-2 F1000            ; retract filament
    G1 Z10                  ; lift z slightly             
    G90                     ; absolute positioning
    G1 X{X} Y{Y} Z{Z} F3000 ; park the head
    RESTORE_GCODE_STATE name=PARK_MACRO_state

[gcode_macro UNLOAD]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_state
    G91                 ; relative positioning
    G1 E5.0 F1200       ; extrude a little
    G1 E3.0 F1600       ; extrude a little more
    G1 E-13.14 F7000    ; retract
    G1 E-40 F3000      ; retract a lot more
    RESTORE_GCODE_STATE name=UNLOAD_state

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                 ; relative positioning
    G1 E45.0 F2500      ; purge
    RESTORE_GCODE_STATE name=PURGE_state

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G91                 ; relative positioning
    G1 E25.0 F1000      ; extrude
    G1 E435 F2500       ; extrude a lot more
    G4 P900             ; dwell
    G1 E45.0 F2500      ; extrude a littel more
    RESTORE_GCODE_STATE name=LOAD_FILAMENT

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: b3293f38dc4a

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
# sensor_type: EPCOS 100K B57560G104F
# From Red Voron
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
pressure_advance: 0.025
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

[verify_heater extruder]
max_error: 300
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

# # RedVoron Settings HERE
# [tmc2209 extruder]
# uart_pin: PD7
# interpolate: false
# run_current: 0.5
# hold_current: 0.4
# sense_resistor: 0.110
# stealthchop_threshold: 0


[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

[probe]
# Tap
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NO instead of NC, change pin to ^!PA3
pin: EBBCan: PA5
x_offset: 0
y_offset: 0
z_offset: 0
speed: 7
lift_speed: 14
samples: 3
samples_result: median
# Increased tolerance from 0.006 to 0.008 to 0.01
sample_retract_dist: 3.0
samples_tolerance: 0.010
samples_tolerance_retries: 6
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

# [temperature_sensor SBB2209]
# sensor_type: temperature_mcu
# sensor_mcu: EBBCan
# min_temp: 0
# max_temp: 90


#*# [probe]
#*# z_offset = -0.300